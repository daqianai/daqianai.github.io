import{_ as t,c as a,o as s,ag as o}from"./chunks/framework.BDwTZuFy.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/openai/assistants/whats-new.md","filePath":"docs/openai/assistants/whats-new.md","lastUpdated":1748071461000}'),n={name:"docs/openai/assistants/whats-new.md"};function i(r,e,l,c,d,h){return s(),a("div",null,e[0]||(e[0]=[o('<p>What&#39;s new in Assistants API</p><p>Beta</p><p>====================================</p><p>Discover new features and improvements in Assistants API.</p><h2 id="march-2025" tabindex="-1">March 2025 <a class="header-anchor" href="#march-2025" aria-label="Permalink to &quot;March 2025&quot;">​</a></h2><p>Based on developer feedback from the Assistants API beta, we&#39;ve incorporated key improvements into the <a href="/docs/openai/guides/responses-vs-chat-completions.html">Responses API</a>, making it more flexible, faster, and easier to use.</p><ul><li>We launched the Responses API, a new API primitive with built-in tools, like function calling, file search, web search, and computer use.</li><li>We&#39;re working to achieve full feature parity between the Assistants and the Responses API, including support for Assistant-like and Thread-like objects and the Code Interpreter tool. We will communicate updates to the Assistants API in the <a href="/docs/changelog.html">changelog</a>.</li><li>After achieving full feature parity, we plan to formally announce the deprecation of the Assistants API with a target sunset date in the first half of 2026. Upon deprecation, we will provide a clear migration guide from the Assistants API to the Responses API that allows developers to preserve all their data and migrate their applications.</li><li>Until we formally announce the deprecation, we will continue delivering new models to the Assistants API. The Responses API represents the future direction for building agents on OpenAI.</li></ul><h2 id="april-2024" tabindex="-1">April 2024 <a class="header-anchor" href="#april-2024" aria-label="Permalink to &quot;April 2024&quot;">​</a></h2><p>We are announcing a variety of new features and improvements to the Assistants API and moving our Beta to a new API version, <code>OpenAI-Beta: assistants=v2</code>. Here&#39;s what&#39;s new:</p><ul><li>We&#39;re launching an <a href="/docs/openai/assistants/tools/file-search.html">improved retrieval tool called <code>file_search</code></a>, which can ingest up to 10,000 files per assistant - 500x more than before. It is faster, supports parallel queries through multi-threaded searches, and features enhanced reranking and query rewriting.</li><li>Alongside <code>file_search</code>, we&#39;re introducing <a href="/docs/openai/assistants/tools/file-search.html#vector-stores"><code>vector_store</code> objects</a> in the API. Once a file is added to a vector store, it&#39;s automatically parsed, chunked, and embedded, made ready to be searched. Vector stores can be used across assistants and threads, simplifying file management and billing.</li><li>You can now <a href="/docs/openai/assistants/overview.html">control the maximum number of tokens</a> a run uses in the Assistants API, allowing you to manage token usage costs. You can also set limits on the number of previous / recent messages used in each run.</li><li>We&#39;ve added support for the <a href="/docs/api-reference/runs/object.html#runs/object-tool_choice"><code>tool_choice</code> parameter</a> which can be used to force the use of a specific tool (like <code>file_search</code>, <code>code_interpreter</code>, or a <code>function</code>) in a particular run.</li><li>You can now <a href="/docs/api-reference/messages/createMessage.html#messages-createmessage-role">create messages with the role <code>assistant</code></a> to create custom conversation histories in Threads.</li><li>Assistant and Run objects now support popular model configuration parameters like <a href="/docs/api-reference/assistants/createAssistant.html#assistants-createassistant-temperature"><code>temperature</code></a>, <a href="/docs/api-reference/assistants/createAssistant.html#assistants-createassistant-response_format"><code>response_format</code> (JSON mode)</a>, and <a href="/docs/api-reference/assistants/createAssistant.html#assistants-createassistant-top_p"><code>top_p</code></a>.</li><li>You can now use <a href="/docs/openai/guides/fine-tuning.html">fine-tuned models</a> in the Assistants API. At the moment, only fine-tuned versions of <code>gpt-3.5-turbo-0125</code> are supported.</li><li>Assistants API now supports <a href="/docs/openai/assistants/overview.html#step-4-create-a-run?context=with-streaming">streaming</a>.</li><li>We&#39;ve added several streaming and polling helpers to our <a href="https://github.com/openai/openai-node/blob/master/helpers.md" target="_blank" rel="noreferrer">Node</a> and <a href="https://github.com/openai/openai-python/blob/main/helpers.md" target="_blank" rel="noreferrer">Python</a> SDKs.</li></ul><p>See our <a href="/docs/openai/assistants/migration.html">migration guide</a> to learn more about how to migrate your tool usage to the latest version of the Assistants API.</p>',11)]))}const m=t(n,[["render",i]]);export{u as __pageData,m as default};
