import{_ as e,c as i,o as s,ag as n}from"./chunks/framework.BDwTZuFy.js";const g=JSON.parse('{"title":"Libraries","description":"","frontmatter":{},"headers":[],"relativePath":"docs/openai/libraries.md","filePath":"docs/openai/libraries.md","lastUpdated":1747917223000}'),t={name:"docs/openai/libraries.md"};function r(l,a,p,h,o,k){return s(),i("div",null,a[0]||(a[0]=[n(`<h1 id="libraries" tabindex="-1">Libraries <a class="header-anchor" href="#libraries" aria-label="Permalink to &quot;Libraries&quot;">​</a></h1><p>Set up your development environment to use the OpenAI API with an SDK in your preferred language.</p><p>This page covers setting up your local development environment to use the <a href="/docs/api-reference.html">OpenAI API</a>. You can use one of our officially supported SDKs, a community library, or your own preferred HTTP client.</p><h2 id="create-and-export-an-api-key" tabindex="-1">Create and export an API key <a class="header-anchor" href="#create-and-export-an-api-key" aria-label="Permalink to &quot;Create and export an API key&quot;">​</a></h2><p>Before you begin, <a href="/api-keys.html">create an API key in the dashboard</a>, which you&#39;ll use to securely <a href="/docs/api-reference/authentication.html">access the API</a>. Store the key in a safe location, like a <a href="https://www.freecodecamp.org/news/how-do-zsh-configuration-files-work/" target="_blank" rel="noreferrer"><code>.zshrc</code> file</a> or another text file on your computer. Once you&#39;ve generated an API key, export it as an <a href="https://en.wikipedia.org/wiki/Environment_variable" target="_blank" rel="noreferrer">environment variable</a> in your terminal.</p><p>macOS / Linux</p><p>Export an environment variable on macOS or Linux systems</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OPENAI_API_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_api_key_here&quot;</span></span></code></pre></div><p>Windows</p><p>Export an environment variable in PowerShell</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OPENAI_API_KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_api_key_here&quot;</span></span></code></pre></div><p>OpenAI SDKs are configured to automatically read your API key from the system environment.</p><h2 id="install-an-official-sdk" tabindex="-1">Install an official SDK <a class="header-anchor" href="#install-an-official-sdk" aria-label="Permalink to &quot;Install an official SDK&quot;">​</a></h2><p>JavaScript</p><p>To use the OpenAI API in server-side JavaScript environments like Node.js, Deno, or Bun, you can use the official <a href="https://github.com/openai/openai-node" target="_blank" rel="noreferrer">OpenAI SDK for TypeScript and JavaScript</a>. Get started by installing the SDK using <a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npm</a> or your preferred package manager:</p><p>Install the OpenAI SDK with npm</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openai</span></span></code></pre></div><p>With the OpenAI SDK installed, create a file called <code>example.mjs</code> and copy the example code into it:</p><p>Test a basic API request</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;openai&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.responses.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    model: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gpt-4.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    input: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Write a one-sentence bedtime story about a unicorn.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response.output_text);</span></span></code></pre></div><p>Execute the code with <code>node example.mjs</code> (or the equivalent command for Deno or Bun). In a few moments, you should see the output of your API request.</p><p>[</p><p>Learn more on GitHub</p><p>Discover more SDK capabilities and options on the library&#39;s GitHub README.</p><p>](<a href="https://github.com/openai/openai-node" target="_blank" rel="noreferrer">https://github.com/openai/openai-node</a>)</p><p>Python</p><p>To use the OpenAI API in Python, you can use the official <a href="https://github.com/openai/openai-python" target="_blank" rel="noreferrer">OpenAI SDK for Python</a>. Get started by installing the SDK using <a href="https://pypi.org/project/pip/" target="_blank" rel="noreferrer">pip</a>:</p><p>Install the OpenAI SDK with pip</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openai</span></span></code></pre></div><p>With the OpenAI SDK installed, create a file called <code>example.py</code> and copy the example code into it:</p><p>Test a basic API request</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> openai </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAI</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAI()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.responses.create(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gpt-4.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Write a one-sentence bedtime story about a unicorn.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response.output_text)</span></span></code></pre></div><p>Execute the code with <code>python example.py</code>. In a few moments, you should see the output of your API request.</p><p>[</p><p>Learn more on GitHub</p><p>Discover more SDK capabilities and options on the library&#39;s GitHub README.</p><p>](<a href="https://github.com/openai/openai-python" target="_blank" rel="noreferrer">https://github.com/openai/openai-python</a>)</p><p>.NET</p><p>In collaboration with Microsoft, OpenAI provides an officially supported API client for C#. You can install it with the .NET CLI from <a href="https://www.nuget.org/" target="_blank" rel="noreferrer">NuGet</a>.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dotnet add package OpenAI</span></span></code></pre></div><p>A simple API request to <a href="/docs/api-reference/chat.html">Chat Completions</a> would look like this:</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Chat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ChatClient</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gpt-4.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  apiKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Environment.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetEnvironmentVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OPENAI_API_KEY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ChatCompletion</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> completion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CompleteChat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Say &#39;this is a test.&#39;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;[ASSISTANT]: {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Content</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">].</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Text</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>To learn more about using the OpenAI API in .NET, check out the GitHub repo linked below!</p><p>[</p><p>Learn more on GitHub</p><p>Discover more SDK capabilities and options on the library&#39;s GitHub README.</p><p>](<a href="https://github.com/openai/openai-dotnet" target="_blank" rel="noreferrer">https://github.com/openai/openai-dotnet</a>)</p><p>Java</p><p>OpenAI provides an API helper for the Java programming language, currently in beta. You can include the Maven depency using the following configuration:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;com.openai&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;openai-java&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0.31.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>A simple API request to <a href="/docs/api-reference/chat.html">Chat Completions</a> would look like this:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.openai.client.OpenAIClient;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.openai.client.okhttp.OpenAIOkHttpClient;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.openai.models.ChatCompletion;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.openai.models.ChatCompletionCreateParams;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.openai.models.ChatModel;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Configures using the \`OPENAI_API_KEY\`, \`OPENAI_ORG_ID\` and \`OPENAI_PROJECT_ID\` </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// environment variables</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OpenAIClient client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAIOkHttpClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromEnv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ChatCompletionCreateParams params </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChatCompletionCreateParams.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addUserMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Say this is a test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ChatModel.O3_MINI)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ChatCompletion chatCompletion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">completions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(params);</span></span></code></pre></div><p>To learn more about using the OpenAI API in Java, check out the GitHub repo linked below!</p><p>[</p><p>Learn more on GitHub</p><p>Discover more SDK capabilities and options on the library&#39;s GitHub README.</p><p>](<a href="https://github.com/openai/openai-java" target="_blank" rel="noreferrer">https://github.com/openai/openai-java</a>)</p><p>Go</p><p>OpenAI provides an API helper for the Go programming language, currently in beta. You can import the library using the code below:</p><div class="language-golang vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">golang</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import (</span></span>
<span class="line"><span>  &quot;github.com/openai/openai-go&quot;</span><span> // imported as openai</span></span>
<span class="line"><span>)</span></span></code></pre></div><p>A simple API request to <a href="/docs/api-reference/chat.html">Chat Completions</a> would look like this:</p><div class="language-golang vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">golang</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>package main</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import (</span></span>
<span class="line"><span>  &quot;context&quot;</span></span>
<span class="line"><span>  &quot;fmt&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  &quot;github.com/openai/openai-go&quot;</span></span>
<span class="line"><span>  &quot;github.com/openai/openai-go/option&quot;</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>func main() {</span></span>
<span class="line"><span>  client := openai.NewClient(</span></span>
<span class="line"><span>    option.WithAPIKey(&quot;My API Key&quot;), // defaults to os.LookupEnv(&quot;OPENAI_API_KEY&quot;)</span></span>
<span class="line"><span>  )</span></span>
<span class="line"><span>  chatCompletion, err := client.Chat.Completions.New(</span></span>
<span class="line"><span>    context.TODO(), openai.ChatCompletionNewParams{</span></span>
<span class="line"><span>      Messages: openai.F(</span></span>
<span class="line"><span>        []openai.ChatCompletionMessageParamUnion{</span></span>
<span class="line"><span>          openai.UserMessage(&quot;Say this is a test&quot;),</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      ),</span></span>
<span class="line"><span>      Model: openai.F(openai.ChatModelGPT4o),</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  )</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  if err != nil {</span></span>
<span class="line"><span>    panic(err.Error())</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  println(chatCompletion.Choices[0].Message.Content)</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>To learn more about using the OpenAI API in Go, check out the GitHub repo linked below!</p><p>[</p><p>Learn more on GitHub</p><p>Discover more SDK capabilities and options on the library&#39;s GitHub README.</p><p>](<a href="https://github.com/openai/openai-go" target="_blank" rel="noreferrer">https://github.com/openai/openai-go</a>)</p><h2 id="azure-openai-libraries" tabindex="-1">Azure OpenAI libraries <a class="header-anchor" href="#azure-openai-libraries" aria-label="Permalink to &quot;Azure OpenAI libraries&quot;">​</a></h2><p>Microsoft&#39;s Azure team maintains libraries that are compatible with both the OpenAI API and Azure OpenAI services. Read the library documentation below to learn how you can use them with the OpenAI API.</p><ul><li><a href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/openai/Azure.AI.OpenAI" target="_blank" rel="noreferrer">Azure OpenAI client library for .NET</a></li><li><a href="https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/openai/openai" target="_blank" rel="noreferrer">Azure OpenAI client library for JavaScript</a></li><li><a href="https://github.com/Azure/azure-sdk-for-java/tree/main/sdk/openai/azure-ai-openai" target="_blank" rel="noreferrer">Azure OpenAI client library for Java</a></li><li><a href="https://github.com/Azure/azure-sdk-for-go/tree/main/sdk/ai/azopenai" target="_blank" rel="noreferrer">Azure OpenAI client library for Go</a></li></ul><hr><h2 id="community-libraries" tabindex="-1">Community libraries <a class="header-anchor" href="#community-libraries" aria-label="Permalink to &quot;Community libraries&quot;">​</a></h2><p>The libraries below are built and maintained by the broader developer community. You can also <a href="https://github.com/openai/openai-openapi" target="_blank" rel="noreferrer">watch our OpenAPI specification</a> repository on GitHub to get timely updates on when we make changes to our API.</p><p>Please note that OpenAI does not verify the correctness or security of these projects. <strong>Use them at your own risk!</strong></p><h3 id="c-net" tabindex="-1">C# / .NET <a class="header-anchor" href="#c-net" aria-label="Permalink to &quot;C# / .NET&quot;">​</a></h3><ul><li><a href="https://github.com/betalgo/openai" target="_blank" rel="noreferrer">Betalgo.OpenAI</a> by <a href="https://github.com/betalgo" target="_blank" rel="noreferrer">Betalgo</a></li><li><a href="https://github.com/OkGoDoIt/OpenAI-API-dotnet" target="_blank" rel="noreferrer">OpenAI-API-dotnet</a> by <a href="https://github.com/OkGoDoIt" target="_blank" rel="noreferrer">OkGoDoIt</a></li><li><a href="https://github.com/RageAgainstThePixel/OpenAI-DotNet" target="_blank" rel="noreferrer">OpenAI-DotNet</a> by <a href="https://github.com/RageAgainstThePixel" target="_blank" rel="noreferrer">RageAgainstThePixel</a></li></ul><h3 id="c" tabindex="-1">C++ <a class="header-anchor" href="#c" aria-label="Permalink to &quot;C++&quot;">​</a></h3><ul><li><a href="https://github.com/D7EAD/liboai" target="_blank" rel="noreferrer">liboai</a> by <a href="https://github.com/D7EAD" target="_blank" rel="noreferrer">D7EAD</a></li></ul><h3 id="clojure" tabindex="-1">Clojure <a class="header-anchor" href="#clojure" aria-label="Permalink to &quot;Clojure&quot;">​</a></h3><ul><li><a href="https://github.com/wkok/openai-clojure" target="_blank" rel="noreferrer">openai-clojure</a> by <a href="https://github.com/wkok" target="_blank" rel="noreferrer">wkok</a></li></ul><h3 id="crystal" tabindex="-1">Crystal <a class="header-anchor" href="#crystal" aria-label="Permalink to &quot;Crystal&quot;">​</a></h3><ul><li><a href="https://github.com/sferik/openai-crystal" target="_blank" rel="noreferrer">openai-crystal</a> by <a href="https://github.com/sferik" target="_blank" rel="noreferrer">sferik</a></li></ul><h3 id="dart-flutter" tabindex="-1">Dart/Flutter <a class="header-anchor" href="#dart-flutter" aria-label="Permalink to &quot;Dart/Flutter&quot;">​</a></h3><ul><li><a href="https://github.com/anasfik/openai" target="_blank" rel="noreferrer">openai</a> by <a href="https://github.com/anasfik" target="_blank" rel="noreferrer">anasfik</a></li></ul><h3 id="delphi" tabindex="-1">Delphi <a class="header-anchor" href="#delphi" aria-label="Permalink to &quot;Delphi&quot;">​</a></h3><ul><li><a href="https://github.com/HemulGM/DelphiOpenAI" target="_blank" rel="noreferrer">DelphiOpenAI</a> by <a href="https://github.com/HemulGM" target="_blank" rel="noreferrer">HemulGM</a></li></ul><h3 id="elixir" tabindex="-1">Elixir <a class="header-anchor" href="#elixir" aria-label="Permalink to &quot;Elixir&quot;">​</a></h3><ul><li><a href="https://github.com/mgallo/openai.ex" target="_blank" rel="noreferrer">openai.ex</a> by <a href="https://github.com/mgallo" target="_blank" rel="noreferrer">mgallo</a></li></ul><h3 id="go" tabindex="-1">Go <a class="header-anchor" href="#go" aria-label="Permalink to &quot;Go&quot;">​</a></h3><ul><li><a href="https://github.com/sashabaranov/go-gpt3" target="_blank" rel="noreferrer">go-gpt3</a> by <a href="https://github.com/sashabaranov" target="_blank" rel="noreferrer">sashabaranov</a></li></ul><h3 id="java" tabindex="-1">Java <a class="header-anchor" href="#java" aria-label="Permalink to &quot;Java&quot;">​</a></h3><ul><li><a href="https://github.com/sashirestela/simple-openai" target="_blank" rel="noreferrer">simple-openai</a> by <a href="https://github.com/sashirestela" target="_blank" rel="noreferrer">Sashir Estela</a></li><li><a href="https://spring.io/projects/spring-ai" target="_blank" rel="noreferrer">Spring AI</a></li></ul><h3 id="julia" tabindex="-1">Julia <a class="header-anchor" href="#julia" aria-label="Permalink to &quot;Julia&quot;">​</a></h3><ul><li><a href="https://github.com/rory-linehan/OpenAI.jl" target="_blank" rel="noreferrer">OpenAI.jl</a> by <a href="https://github.com/rory-linehan" target="_blank" rel="noreferrer">rory-linehan</a></li></ul><h3 id="kotlin" tabindex="-1">Kotlin <a class="header-anchor" href="#kotlin" aria-label="Permalink to &quot;Kotlin&quot;">​</a></h3><ul><li><a href="https://github.com/Aallam/openai-kotlin" target="_blank" rel="noreferrer">openai-kotlin</a> by <a href="https://github.com/Aallam" target="_blank" rel="noreferrer">Mouaad Aallam</a></li></ul><h3 id="node-js" tabindex="-1">Node.js <a class="header-anchor" href="#node-js" aria-label="Permalink to &quot;Node.js&quot;">​</a></h3><ul><li><a href="https://www.npmjs.com/package/openai-api" target="_blank" rel="noreferrer">openai-api</a> by <a href="https://github.com/Njerschow" target="_blank" rel="noreferrer">Njerschow</a></li><li><a href="https://www.npmjs.com/package/openai-api-node" target="_blank" rel="noreferrer">openai-api-node</a> by <a href="https://github.com/erlapso" target="_blank" rel="noreferrer">erlapso</a></li><li><a href="https://www.npmjs.com/package/gpt-x" target="_blank" rel="noreferrer">gpt-x</a> by <a href="https://github.com/ceifa" target="_blank" rel="noreferrer">ceifa</a></li><li><a href="https://www.npmjs.com/package/gpt3" target="_blank" rel="noreferrer">gpt3</a> by <a href="https://github.com/poteat" target="_blank" rel="noreferrer">poteat</a></li><li><a href="https://www.npmjs.com/package/gpts" target="_blank" rel="noreferrer">gpts</a> by <a href="https://github.com/thencc" target="_blank" rel="noreferrer">thencc</a></li><li><a href="https://www.npmjs.com/package/@dalenguyen/openai" target="_blank" rel="noreferrer">@dalenguyen/openai</a> by <a href="https://github.com/dalenguyen" target="_blank" rel="noreferrer">dalenguyen</a></li><li><a href="https://github.com/tectalichq/public-openai-client-js" target="_blank" rel="noreferrer">tectalic/openai</a> by <a href="https://tectalic.com/" target="_blank" rel="noreferrer">tectalic</a></li></ul><h3 id="php" tabindex="-1">PHP <a class="header-anchor" href="#php" aria-label="Permalink to &quot;PHP&quot;">​</a></h3><ul><li><a href="https://packagist.org/packages/orhanerday/open-ai" target="_blank" rel="noreferrer">orhanerday/open-ai</a> by <a href="https://github.com/orhanerday" target="_blank" rel="noreferrer">orhanerday</a></li><li><a href="https://github.com/tectalichq/public-openai-client-php" target="_blank" rel="noreferrer">tectalic/openai</a> by <a href="https://tectalic.com/" target="_blank" rel="noreferrer">tectalic</a></li><li><a href="https://github.com/openai-php/client" target="_blank" rel="noreferrer">openai-php client</a> by <a href="https://github.com/openai-php" target="_blank" rel="noreferrer">openai-php</a></li></ul><h3 id="python" tabindex="-1">Python <a class="header-anchor" href="#python" aria-label="Permalink to &quot;Python&quot;">​</a></h3><ul><li><a href="https://github.com/OthersideAI/chronology" target="_blank" rel="noreferrer">chronology</a> by <a href="https://www.othersideai.com/" target="_blank" rel="noreferrer">OthersideAI</a></li></ul><h3 id="r" tabindex="-1">R <a class="header-anchor" href="#r" aria-label="Permalink to &quot;R&quot;">​</a></h3><ul><li><a href="https://github.com/ben-aaron188/rgpt3" target="_blank" rel="noreferrer">rgpt3</a> by <a href="https://github.com/ben-aaron188" target="_blank" rel="noreferrer">ben-aaron188</a></li></ul><h3 id="ruby" tabindex="-1">Ruby <a class="header-anchor" href="#ruby" aria-label="Permalink to &quot;Ruby&quot;">​</a></h3><ul><li><a href="https://github.com/nileshtrivedi/openai/" target="_blank" rel="noreferrer">openai</a> by <a href="https://github.com/nileshtrivedi" target="_blank" rel="noreferrer">nileshtrivedi</a></li><li><a href="https://github.com/alexrudall/ruby-openai" target="_blank" rel="noreferrer">ruby-openai</a> by <a href="https://github.com/alexrudall" target="_blank" rel="noreferrer">alexrudall</a></li></ul><h3 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to &quot;Rust&quot;">​</a></h3><ul><li><a href="https://github.com/64bit/async-openai" target="_blank" rel="noreferrer">async-openai</a> by <a href="https://github.com/64bit" target="_blank" rel="noreferrer">64bit</a></li><li><a href="https://github.com/lbkolev/fieri" target="_blank" rel="noreferrer">fieri</a> by <a href="https://github.com/lbkolev" target="_blank" rel="noreferrer">lbkolev</a></li></ul><h3 id="scala" tabindex="-1">Scala <a class="header-anchor" href="#scala" aria-label="Permalink to &quot;Scala&quot;">​</a></h3><ul><li><a href="https://github.com/cequence-io/openai-scala-client" target="_blank" rel="noreferrer">openai-scala-client</a> by <a href="https://github.com/cequence-io" target="_blank" rel="noreferrer">cequence-io</a></li></ul><h3 id="swift" tabindex="-1">Swift <a class="header-anchor" href="#swift" aria-label="Permalink to &quot;Swift&quot;">​</a></h3><ul><li><a href="https://github.com/lzell/AIProxySwift" target="_blank" rel="noreferrer">AIProxySwift</a> by <a href="https://github.com/lzell" target="_blank" rel="noreferrer">Lou Zell</a></li><li><a href="https://github.com/dylanshine/openai-kit" target="_blank" rel="noreferrer">OpenAIKit</a> by <a href="https://github.com/dylanshine" target="_blank" rel="noreferrer">dylanshine</a></li><li><a href="https://github.com/MacPaw/OpenAI/" target="_blank" rel="noreferrer">OpenAI</a> by <a href="https://github.com/MacPaw" target="_blank" rel="noreferrer">MacPaw</a></li></ul><h3 id="unity" tabindex="-1">Unity <a class="header-anchor" href="#unity" aria-label="Permalink to &quot;Unity&quot;">​</a></h3><ul><li><a href="https://github.com/hexthedev/OpenAi-Api-Unity" target="_blank" rel="noreferrer">OpenAi-Api-Unity</a> by <a href="https://github.com/hexthedev" target="_blank" rel="noreferrer">hexthedev</a></li><li><a href="https://github.com/RageAgainstThePixel/com.openai.unity" target="_blank" rel="noreferrer">com.openai.unity</a> by <a href="https://github.com/RageAgainstThePixel" target="_blank" rel="noreferrer">RageAgainstThePixel</a></li></ul><h3 id="unreal-engine" tabindex="-1">Unreal Engine <a class="header-anchor" href="#unreal-engine" aria-label="Permalink to &quot;Unreal Engine&quot;">​</a></h3><ul><li><a href="https://github.com/KellanM/OpenAI-Api-Unreal" target="_blank" rel="noreferrer">OpenAI-Api-Unreal</a> by <a href="https://github.com/KellanM" target="_blank" rel="noreferrer">KellanM</a></li></ul><h2 id="other-openai-repositories" tabindex="-1">Other OpenAI repositories <a class="header-anchor" href="#other-openai-repositories" aria-label="Permalink to &quot;Other OpenAI repositories&quot;">​</a></h2><ul><li><a href="https://github.com/openai/tiktoken" target="_blank" rel="noreferrer">tiktoken</a> - counting tokens</li><li><a href="https://github.com/openai/simple-evals" target="_blank" rel="noreferrer">simple-evals</a> - simple evaluation library</li><li><a href="https://github.com/openai/mle-bench" target="_blank" rel="noreferrer">mle-bench</a> - library to evaluate machine learning engineer agents</li><li><a href="https://github.com/openai/gym" target="_blank" rel="noreferrer">gym</a> - reinforcement learning library</li><li><a href="https://github.com/openai/swarm" target="_blank" rel="noreferrer">swarm</a> - educational orchestration repository</li></ul>`,118)]))}const d=e(t,[["render",r]]);export{g as __pageData,d as default};
