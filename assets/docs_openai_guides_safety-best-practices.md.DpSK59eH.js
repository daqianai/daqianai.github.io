import{_ as s,c as i,o as a,ag as t}from"./chunks/framework.BDwTZuFy.js";const c=JSON.parse('{"title":"Safety best practices","description":"","frontmatter":{},"headers":[],"relativePath":"docs/openai/guides/safety-best-practices.md","filePath":"docs/openai/guides/safety-best-practices.md","lastUpdated":1748071461000}'),n={name:"docs/openai/guides/safety-best-practices.md"};function o(r,e,p,h,l,d){return a(),i("div",null,e[0]||(e[0]=[t(`<h1 id="safety-best-practices" tabindex="-1">Safety best practices <a class="header-anchor" href="#safety-best-practices" aria-label="Permalink to &quot;Safety best practices&quot;">​</a></h1><p>Implement safety measures like moderation and human oversight.</p><h3 id="use-our-free-moderation-api" tabindex="-1">Use our free Moderation API <a class="header-anchor" href="#use-our-free-moderation-api" aria-label="Permalink to &quot;Use our free Moderation API&quot;">​</a></h3><p>OpenAI&#39;s <a href="/docs/openai/guides/moderation.html">Moderation API</a> is free-to-use and can help reduce the frequency of unsafe content in your completions. Alternatively, you may wish to develop your own content filtration system tailored to your use case.</p><h3 id="adversarial-testing" tabindex="-1">Adversarial testing <a class="header-anchor" href="#adversarial-testing" aria-label="Permalink to &quot;Adversarial testing&quot;">​</a></h3><p>We recommend “red-teaming” your application to ensure it&#39;s robust to adversarial input. Test your product over a wide range of inputs and user behaviors, both a representative set and those reflective of someone trying to ‘break&#39; your application. Does it wander off topic? Can someone easily redirect the feature via prompt injections, e.g. “ignore the previous instructions and do this instead”?</p><h3 id="human-in-the-loop-hitl" tabindex="-1">Human in the loop (HITL) <a class="header-anchor" href="#human-in-the-loop-hitl" aria-label="Permalink to &quot;Human in the loop (HITL)&quot;">​</a></h3><p>Wherever possible, we recommend having a human review outputs before they are used in practice. This is especially critical in high-stakes domains, and for code generation. Humans should be aware of the limitations of the system, and have access to any information needed to verify the outputs (for example, if the application summarizes notes, a human should have easy access to the original notes to refer back).</p><h3 id="prompt-engineering" tabindex="-1">Prompt engineering <a class="header-anchor" href="#prompt-engineering" aria-label="Permalink to &quot;Prompt engineering&quot;">​</a></h3><p>“Prompt engineering” can help constrain the topic and tone of output text. This reduces the chance of producing undesired content, even if a user tries to produce it. Providing additional context to the model (such as by giving a few high-quality examples of desired behavior prior to the new input) can make it easier to steer model outputs in desired directions.</p><h3 id="know-your-customer-kyc" tabindex="-1">“Know your customer” (KYC) <a class="header-anchor" href="#know-your-customer-kyc" aria-label="Permalink to &quot;“Know your customer” (KYC)&quot;">​</a></h3><p>Users should generally need to register and log-in to access your service. Linking this service to an existing account, such as a Gmail, LinkedIn, or Facebook log-in, may help, though may not be appropriate for all use-cases. Requiring a credit card or ID card reduces risk further.</p><h3 id="constrain-user-input-and-limit-output-tokens" tabindex="-1">Constrain user input and limit output tokens <a class="header-anchor" href="#constrain-user-input-and-limit-output-tokens" aria-label="Permalink to &quot;Constrain user input and limit output tokens&quot;">​</a></h3><p>Limiting the amount of text a user can input into the prompt helps avoid prompt injection. Limiting the number of output tokens helps reduce the chance of misuse.</p><p>Narrowing the ranges of inputs or outputs, especially drawn from trusted sources, reduces the extent of misuse possible within an application.</p><p>Allowing user inputs through validated dropdown fields (e.g., a list of movies on Wikipedia) can be more secure than allowing open-ended text inputs.</p><p>Returning outputs from a validated set of materials on the backend, where possible, can be safer than returning novel generated content (for instance, routing a customer query to the best-matching existing customer support article, rather than attempting to answer the query from-scratch).</p><h3 id="allow-users-to-report-issues" tabindex="-1">Allow users to report issues <a class="header-anchor" href="#allow-users-to-report-issues" aria-label="Permalink to &quot;Allow users to report issues&quot;">​</a></h3><p>Users should generally have an easily-available method for reporting improper functionality or other concerns about application behavior (listed email address, ticket submission method, etc). This method should be monitored by a human and responded to as appropriate.</p><h3 id="understand-and-communicate-limitations" tabindex="-1">Understand and communicate limitations <a class="header-anchor" href="#understand-and-communicate-limitations" aria-label="Permalink to &quot;Understand and communicate limitations&quot;">​</a></h3><p>From hallucinating inaccurate information, to offensive outputs, to bias, and much more, language models may not be suitable for every use case without significant modifications. Consider whether the model is fit for your purpose, and evaluate the performance of the API on a wide range of potential inputs in order to identify cases where the API&#39;s performance might drop. Consider your customer base and the range of inputs that they will be using, and ensure their expectations are calibrated appropriately.</p><p>Safety and security are very important to us at OpenAI.</p><p>If in the course of your development you do notice any safety or security issues with the API or anything else related to OpenAI, please submit these through our <a href="https://openai.com/security/disclosure/" target="_blank" rel="noreferrer">Coordinated Vulnerability Disclosure Program</a>.</p><h2 id="end-user-ids" tabindex="-1">End-user IDs <a class="header-anchor" href="#end-user-ids" aria-label="Permalink to &quot;End-user IDs&quot;">​</a></h2><p>Sending end-user IDs in your requests can be a useful tool to help OpenAI monitor and detect abuse. This allows OpenAI to provide your team with more actionable feedback in the event that we detect any policy violations in your application.</p><p>The IDs should be a string that uniquely identifies each user. We recommend hashing their username or email address, in order to avoid sending us any identifying information. If you offer a preview of your product to non-logged in users, you can send a session ID instead.</p><p>You can include end-user IDs in your API requests via the <code>user</code> parameter as follows:</p><p>Example: Providing a user identifer</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> openai </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAI</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAI()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.chat.completions.create(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gpt-4o-mini&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  messages</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is a test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  max_tokens</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user_123456&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://api.openai.com/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Authorization: Bearer </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$OPENAI_API_KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;model&quot;: &quot;gpt-4o-mini&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;This is a test&quot;}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;max_tokens&quot;: 5,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;user&quot;: &quot;user123456&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&#39;</span></span></code></pre></div>`,30)]))}const k=s(n,[["render",o]]);export{c as __pageData,k as default};
