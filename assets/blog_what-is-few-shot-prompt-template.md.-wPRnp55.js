import{_ as i}from"./chunks/daqianai-header.CFdivPrw.js";import{_ as a}from"./chunks/daqianai_wx_qrcode_white.eXbCYHnq.js";import{_ as t,c as n,o as e,a2 as p}from"./chunks/framework.DDIT__tB.js";const l="/assets/for-example.DWAE8e44.jpg",h="/assets/what-is-few-shot-prompt-template.5qJ8vAG2.png",y=JSON.parse('{"title":"告别无效提示！使用少样本学习让AI秒懂你的需求","description":"","frontmatter":{"title":"告别无效提示！使用少样本学习让AI秒懂你的需求"},"headers":[],"relativePath":"blog/what-is-few-shot-prompt-template.md","filePath":"blog/what-is-few-shot-prompt-template.md","lastUpdated":1748967323000}'),r={name:"blog/what-is-few-shot-prompt-template.md"};function o(k,s,d,g,E,c){return e(),n("div",null,s[0]||(s[0]=[p('<p><img src="'+i+'" alt="大千世界无奇不有，大千AI智探万象"></p><h1 id="fewshotprompttemplate" tabindex="-1">FewShotPromptTemplate <a class="header-anchor" href="#fewshotprompttemplate" aria-label="Permalink to &quot;FewShotPromptTemplate&quot;">​</a></h1><blockquote><p><code>FewShotPromptTemplate</code> 是 LangChain 中用于实现少样本学习（few-shot learning）的提示模板类，它通过提供少量示例来指导大语言模型快速理解任务并生成更准确的符合要求的回答。</p></blockquote><p>核心就是通过<strong>示例</strong>演示任务规则，而不仅仅是通过文字指令描述任务。</p><p>就像教孩子认动物：与其解释&quot;老虎有条纹、是大型猫科动物&quot;，不如直接展示老虎图片并说&quot;这是老虎&quot;——直观示例比抽象描述更有效。</p><p><img src="'+l+`" alt="举个栗子"></p><h2 id="作用和原理" tabindex="-1">作用和原理 <a class="header-anchor" href="#作用和原理" aria-label="Permalink to &quot;作用和原理&quot;">​</a></h2><h3 id="核心作用" tabindex="-1">核心作用 <a class="header-anchor" href="#核心作用" aria-label="Permalink to &quot;核心作用&quot;">​</a></h3><p><code>FewShotPromptTemplate</code> 的主要作用是将多个示例组合成一个完整的提示，帮助模型理解任务模式并生成更好的输出。</p><h3 id="工作原理" tabindex="-1">工作原理 <a class="header-anchor" href="#工作原理" aria-label="Permalink to &quot;工作原理&quot;">​</a></h3><p>该模板的工作流程如下：</p><ol><li><p><strong>示例获取</strong>：从预定义的示例列表(examples)或示例选择器(example_selector)中获取相关示例</p></li><li><p><strong>示例格式化</strong>：使用 <code>example_prompt</code> 将每个示例格式化为字符串</p></li><li><p><strong>模板组装</strong>：按照 <code>prefix</code> + 格式化示例 + <code>suffix</code> 的顺序组装最终提示</p></li><li><p><strong>变量替换</strong>：使用指定的模板格式（<code>f-string</code> 或 <code>jinja2</code>）进行最终的变量替换</p></li></ol><h3 id="关键参数" tabindex="-1">关键参数 <a class="header-anchor" href="#关键参数" aria-label="Permalink to &quot;关键参数&quot;">​</a></h3><ul><li><strong>examples/example_selector</strong>：提供示例数据，两者只能选其一</li><li><strong>example_prompt</strong>：定义单个示例的格式化模板</li><li><strong>prefix/suffix</strong>：提示的前缀和后缀模版字符串部分,默认都是空字符串<code>&quot;&quot;</code></li><li><strong>input_variables</strong>：最终模板中需要替换的变量列表，确保与prefix或suffix中的变量匹配</li></ul><h2 id="什么时候用" tabindex="-1">什么时候用？ <a class="header-anchor" href="#什么时候用" aria-label="Permalink to &quot;什么时候用？&quot;">​</a></h2><h3 id="适用场景" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景" aria-label="Permalink to &quot;适用场景&quot;">​</a></h3><ol><li><p><strong>任务模式复杂</strong>：当任务需要特定的输入输出格式时</p></li><li><p><strong>提高回答质量</strong>：通过示例引导模型生成更准确的回答</p></li><li><p><strong>动态示例选择</strong>：需要根据输入动态选择最相关的示例(有大量不同类型的示例)</p></li></ol><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><ul><li>生成提示词</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> langchain_core.prompts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PromptTemplate, FewShotPromptTemplate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># few-shot 示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这里的示例使用了 😝 表情来表示加法运算</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">examples </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2 😝 3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4 😝 5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">few_shot_prompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FewShotPromptTemplate(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;以下是一些关于 😝 运算符的示例：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    examples</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">examples,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    example_prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PromptTemplate.from_template(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;输入: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">输出: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">template_format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jinja2&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    suffix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请根据这些示例，提供</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expression </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">的结果&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    input_variables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;expression&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    template_format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jinja2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(few_shot_prompt.format(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">expression</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9 😝 10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><ul><li>提示词结果</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>以下是一些关于 😝 运算符的示例：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>输入: 2 😝 3</span></span>
<span class="line"><span>输出: 5</span></span>
<span class="line"><span></span></span>
<span class="line"><span>输入: 4 😝 5</span></span>
<span class="line"><span>输出: 9</span></span>
<span class="line"><span></span></span>
<span class="line"><span>请根据这些示例，提供9 😝 10的结果</span></span></code></pre></div><ul><li>去问下聪明伶俐的deepseek <img src="`+h+'" alt="few-shot-prompt-deepseek-example"></li></ul><h2 id="one-more-thing" tabindex="-1">One More Thing <a class="header-anchor" href="#one-more-thing" aria-label="Permalink to &quot;One More Thing&quot;">​</a></h2><p>根据AI研究论文实证：</p><ul><li>在知识检索任务中，few-shot相比zero-shot提示可提升21-46%准确率</li><li>LangChain官方测试显示文本分类任务有35%的相对提升</li><li>GPT-3在翻译任务中BLEU分数提升达40%</li></ul><p>（效果因模型/任务而异，建议通过Prompt调试确定最佳示例数量）</p><p><code>FewShotPromptTemplate</code> 特别适合需要展示输入输出模式的任务，如翻译、问答、数据转换等。通过提供相关示例，可以显著提高模型在特定任务上的表现，特别是在处理结构化输出或复杂推理任务时。选择使用固定示例还是动态示例选择器取决于你的具体需求和示例数量。</p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><ul><li><a href="https://arxiv.org/abs/2202.12837" target="_blank" rel="noreferrer">《Rethinking the Role of Demonstrations: What Makes In-Context Learning Work?》(2022)</a></li><li>LangChain博客《Few-shot Prompting Strategies》</li><li>OpenAI技术报告：《Language Models are Few-Shot Learners》(2020)</li><li><a href="https://github.com/langchain-ai/langchain/blob/master/docs/docs/how_to/few_shot_examples_chat.ipynb" target="_blank" rel="noreferrer">github langchain tutorial</a></li></ul><p><img src="'+a+'" alt="微信搜索 &quot;大千AI助手&quot; 学习最实用的AI技术"></p>',31)]))}const f=t(r,[["render",o]]);export{y as __pageData,f as default};
